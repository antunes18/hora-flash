name: Docker Image CI

on:
  push:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    # --- Adicionado: Configuração do Python e execução dos testes ---
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x' # Use a versão do Python que seu projeto requer
        cache: 'pip' # Habilita o cache de dependências do pip para builds mais rápidos

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        # Assumindo que você tem um arquivo requirements.txt para as dependências do seu projeto e testes
        # Se não tiver, você pode instalar apenas o pytest: pip install pytest
        pip install -r requirements.txt
        # Instale quaisquer outras dependências necessárias para os testes, se não estiverem no requirements.txt
        # Por exemplo, para pytest-asyncio que você mencionou: pip install pytest-asyncio
        pip install pytest pytest-asyncio # Adicione outros que você usa, como 'anyio' se for o caso

    - name: Run tests
      # Este passo é crucial. Se 'pytest' retornar um código de saída diferente de zero (indicando falha),
      # esta etapa falhará e o workflow será interrompido, impedindo o build e o push da imagem Docker.
      run: pytest
    # --- Fim da seção de testes adicionada ---

    - name: Build the Docker image (Este passo original pode ser removido se o 'docker/build-push-action' for suficiente)
      # Se o 'docker/build-push-action' no final for usado para construir E empurrar,
      # este passo pode ser redundante e causar uma construção dupla.
      # Considere remover esta linha se 'docker/build-push-action' atende a todas as suas necessidades de build.
      run: docker build . --file Dockerfile --tag criasltda/horaflash:temp_build # Altere a tag para evitar conflito se mantiver

    - name: setando docker buildx
      uses: docker/setup-buildx-action@v2

    - name: logando no docker hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        platforms: linux/arm64
        tags: criasltda/horaflash:latest
        labels: api
