name: Docker Image CI

on:
  push:
    branches: [ "dev" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    # --- Adicionado: Configuração do Python e execução dos testes ---
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13' # Use a versão do Python que seu projeto requer
        cache: 'pip' # Habilita o cache de dependências do pip para builds mais rápidos

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        # Assumindo que você tem um arquivo requirements.txt para as dependências do seu projeto e testes
        # Se não tiver, você pode instalar apenas o pytest: pip install pytest
        pip install -r requirements.txt
        # Instale quaisquer outras dependências necessárias para os testes, se não estiverem no requirements.txt
        # Por exemplo, para pytest-asyncio que você mencionou: pip install pytest-asyncio
        pip install pytest pytest-asyncio # Adicione outros que você usa, como 'anyio' se for o caso

    - name: Run tests
      # Este passo é crucial. Se 'pytest' retornar um código de saída diferente de zero (indicando falha),
      # esta etapa falhará e o workflow será interrompido, impedindo o build e o push da imagem Docker.
      run: pytest
    # --- Fim da seção de testes adicionada ---

